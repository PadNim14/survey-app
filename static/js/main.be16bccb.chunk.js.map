{"version":3,"sources":["reportWebVitals.js","config.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Survey","applyTheme","ReactDOM","render","json","title","description","completedHtml","pages","name","elements","type","isRequired","requiredErrorText","defaultValue","expression","onComplete","survey","console","log","JSON","stringify","data","collection","add","Patient_Name","Chest_Pressure","Shoulder_Pain","Sweating","Palpitations","Chest_Discomfort","Upper_Back_Pain","Short_of_Breath","Arm_Pain","Unusual_Fatigue","Nausea","Lightheaded","Chest_Pain","Indigestion","Risk_Score","catch","error","document","getElementById"],"mappings":"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","file":"static/js/main.be16bccb.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import firebase from \"firebase/compat/app\";\r\nimport \"firebase/compat/firestore\";\r\n//import \"firebase/compat/credentials\";\r\n//import \"firebase/auth\";\r\n//import \"firebase/firestore\";\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDKq7ac8s-ZlpDmlShbqgPAOzio-zKA-3I\",\r\n  authDomain: \"hit-with-database.firebaseapp.com\",\r\n  projectId: \"hit-with-database\",\r\n  storageBucket: \"hit-with-database.appspot.com\",\r\n  messagingSenderId: \"674336402509\",\r\n  appId: \"1:674336402509:web:de9c2fecaf15c008aa8004\",\r\n  measurementId: \"G-D6VXTFGF0R\"\r\n};\r\n\r\nconst firebaseInitial = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseInitial.firestore();\r\n\r\nexport { firebaseInitial, db };","import React from 'react';\nimport ReactDOM, { createPortal } from 'react-dom';\n// import App from './App';\nimport './index.css';\nimport \"survey-react/survey.css\";\nimport * as Survey from \"survey-react\";\nimport reportWebVitals from './reportWebVitals';\nimport {firebaseInitial, db} from './config.js';\n\nSurvey.StylesManager.applyTheme(\"darkrose\");\n// TODO: if no symptoms, then assign empty to 0 -> calculate risk score\n// TODO: make comments optional\n\nvar surveyJSON = {title:\"ACS Symptom Checklist\",description:\"Select 1 if you strongly disagree with the statement; click 5 if you strongly agree with the statement. Otherwise, rate your answer accordingly.\",completedHtml:\"<!DOCTYPE html>\\n<html lang=\\\"en\\\">\\n    <head>\\n        <h1>Thank you for completing the survey </h1>\\n        <a href=\\\"https://padnim14.github.io/survey-app/\\\"> Take survey again </a>\\n    </head>\\n</html>\",\npages:[{name:\"page1\",\nelements:[{type:\"text\",name:\"question16\",title:\"Please enter your name (first name & last name)\",isRequired:true,requiredErrorText:\"Please enter your first and last name.\\n\\n\"},\n{type:\"rating\",name:\"question1\",title:\"How do you feel today?\",defaultValue:0},\n{type:\"rating\",name:\"question2\",title:\"Did you sleep well last night?\",defaultValue:0},\n{type:\"rating\",name:\"question3\",title: \"How do you rate the swelling in your lungs?\",defaultValue:0},\n{type:\"rating\",name:\"question4\",title:\"How is your breathing?\",defaultValue:0},\n{type:\"rating\",name:\"question5\",title:\"How is your stomach?\",defaultValue:0},\n{type:\"rating\",name:\"question6\",title:\"How does your head feel?\",defaultValue:0},\n{type:\"rating\",name:\"question7\",title:\"How is your pulse?\",defaultValue:0},\n{type:\"rating\",name:\"question8\",title:\"How does your chest feel?\",defaultValue:0},\n\n{type:\"rating\",name:\"question9\",title:\"How do you feel today?\",defaultValue:0},\n{type:\"rating\",name:\"question10\",title:\"Did you sleep well last night?\",defaultValue:0},\n{type:\"rating\",name:\"question11\",title:\"How do you rate the swelling in your logs\",defaultValue:0},\n{type:\"rating\",name:\"question12\",title:\"How is your breathing?\",defaultValue:0},\n{type:\"rating\",name:\"question13\",title:\"How is your stomach?\",defaultValue:0},\n\n{type:\"expression\", name:\"risk score\", title:\"Your Risk Score:\", expression:\"{question1} + {question2} + {question3} + {question4} + {question5} + {question6} + {question7} + {question8} + {question9} + {question10} + {question11} + {question12} + {question13}\"}],\ntitle:\"ACS Symptom Checklist\",description:\"Please indicate all symptoms that you are currently experiencing or experienced before you called 911 today or came to the Emergency Department today.\"}]}\n\nfunction sendDataToServer(survey) {\n    //survey.sendResult('398b1917-1d7b-4c0f-b910-0deb09e4c1e3');\n    console.log(\"Survey results: \" + JSON.stringify(survey.data[\"question1\"]));\n    var riskscore = 0;\n    console.log(\"Survey results: \" + JSON.stringify(survey.data[\"question1\"]));\n    var data = survey.data;\n\n    db.collection(\"Patients ACS Symptom Checklist\").add({\n        Patient_Name: JSON.stringify(survey.data[\"question16\"]),\n        Chest_Pressure: JSON.stringify(survey.data[\"question1\"]),\n        Shoulder_Pain: JSON.stringify(survey.data[\"question2\"]),\n        Sweating: JSON.stringify(survey.data[\"question3\"]),\n        Palpitations: JSON.stringify(survey.data[\"question4\"]),\n        Chest_Discomfort: JSON.stringify(survey.data[\"question5\"]),\n        Upper_Back_Pain: JSON.stringify(survey.data[\"question6\"]),\n        Short_of_Breath: JSON.stringify(survey.data[\"question7\"]),\n        Arm_Pain: JSON.stringify(survey.data[\"question8\"]),\n        Unusual_Fatigue: JSON.stringify(survey.data[\"question9\"]),\n        Nausea: JSON.stringify(survey.data[\"question10\"]),\n        Lightheaded: JSON.stringify(survey.data[\"question11\"]),\n        Chest_Pain: JSON.stringify(survey.data[\"question12\"]),\n        Indigestion: JSON.stringify(survey.data[\"question13\"]),\n        Risk_Score: JSON.stringify(survey.data[\"risk score\"])\n    })\n    .then(() => {\n        console.log(\"Document successfully written!\");\n    })\n    .catch((error) => {\n        console.error(\"Error writing document: \", error);\n    });\n\n}\n\n\nReactDOM.render(\n    <Survey.Survey json={ surveyJSON } onComplete={ sendDataToServer } />, document.getElementById(\"surveyContainer\"));\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}